{"componentChunkName":"component---node-modules-gatsby-theme-kb-src-templates-topic-js","path":"/computer-science/computer-networking/wiki/computer-networking-wiki","result":{"data":{"file":{"childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Computer Networking Wiki\"), mdx(\"h2\", null, \"Modules\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"cidr\",\n    \"title\": \"cidr\"\n  }, \"[[cidr]]\"), \"\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"","private":false},"outboundReferences":[{"contextLine":"- [[cidr]]","targetAnchor":null,"refWord":"cidr","target":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"CIDR\"), mdx(\"h2\", null, \"Resources\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.aws.training/Details/Video?id=16480\"\n  }, \"Understanding CIDR Notation\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.youtube.com/watch?v=z07HTSzzp3o&t=745s\"\n  }, \"IPv4, CIDR, and VPC Subnets Made Simple!\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://cidr.xyz/\"\n  }, \"Visualize CIDRs\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.davidc.net/sites/default/subnets/subnets.html\"\n  }, \"Visual Subnet Calculator\"))), mdx(\"h2\", null, \"Basics\"), mdx(\"p\", null, \"CIDR: Classless Inter Domain Routing\"), mdx(\"p\", null, \"An IPv4 IP address is made up of 32 bits:\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"/knowledge/92d620bed45c9b57df93cf15144791f6/ip-address-32-bits.png\",\n    \"alt\": \"ip-address-32-bits\"\n  })), mdx(\"p\", null, \"If we want a representation of all IPs starting with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"10.10\"), \", we can use the\\nCIDR representation as:\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"/knowledge/fa02f840f3a35af3568295cd5c780a12/cidr.png\",\n    \"alt\": \"cidr\"\n  })), mdx(\"p\", null, \"!!! note \\\"number of hosts\\\"\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"10.10.0.0/16\"), \" will give us a total of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"256*256\"), \" hosts. Similarly,\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"10.10.0.0/24\"), \" will give us a total of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"256\"), \" hosts.\"), mdx(\"p\", null, \"!!! note \\\"single IPv4 address\\\"\\nA single IPv4 address in CIDR notation is: \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"10.10.101.5/32\"), \".\"), mdx(\"h2\", null, \"All Wildcards\"), mdx(\"p\", null, \"If we want to represent the entire set of possible IPv4 addresses:\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"/knowledge/8c3255ea339c384bb642036a2de58a27/all-wildcards.png\",\n    \"alt\": \"all-wildcards\"\n  })), mdx(\"h2\", null, \"Example\"), mdx(\"p\", null, \"Use \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://cidr.xyz/\"\n  }, \"this\"), \" and \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.davidc.net/sites/default/subnets/subnets.html\"\n  }, \"this\"), \" to\\nvisualize.\"), mdx(\"p\", null, \"Let's say VPC CIDR is: \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"10.0.0.0/26\"), \", which means 64 total IPs (62 usable).\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"/knowledge/1a082c8b732a44be873af9e3db0dd303/vpc-cidr.png\",\n    \"alt\": \"vpc-cidr\"\n  })), mdx(\"p\", null, \"We can subnet this VPC into two subnets, having the following CIDRs:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"10.0.0.0/27\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"10.0.0.32/27\"))), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"/knowledge/f3fd42b5c2030e058022cec00fd04ce7/subnets.png\",\n    \"alt\": \"subnets\"\n  })), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"/knowledge/cf4413809282b308657e6f925eadad6b/subnet-1.png\",\n    \"alt\": \"subnet-1\"\n  })), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"/knowledge/5e14cfaf3078f531c439aa686703af9b/subnet-2.png\",\n    \"alt\": \"subnet-2\"\n  })));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"id":"0ec8f889-d790-56ff-8926-dfbbf77e64b0","fields":{"slug":"/computer-science/computer-networking/wiki/cidr","title":"CIDR"}}}}],"inboundReferences":[{"contextLine":"- [[computer-networking-wiki]]","referrer":{"parent":{"id":"98683eeb-97dd-5f9a-af77-6cc2bcf5a722","fields":{"slug":"/computer-science/computer-networking/computer-networking","title":"Computer Networking"}}}}]},"fields":{"slug":"/computer-science/computer-networking/wiki/computer-networking-wiki","title":"Computer Networking Wiki"}}},"pageContext":{"id":"32c10118-138b-5709-a3dc-d2117fca242f","refWordMdxSlugDict":{"cidr":"computer-science/computer-networking/wiki/cidr"}}},"staticQueryHashes":["2221750479","2380733210","2768355698","63159454","847517413"]}