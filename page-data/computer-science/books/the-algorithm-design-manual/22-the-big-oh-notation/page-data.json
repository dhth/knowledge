{"componentChunkName":"component---node-modules-gatsby-theme-kb-src-templates-topic-js","path":"/computer-science/books/the-algorithm-design-manual/22-the-big-oh-notation","result":{"data":{"file":{"childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"2.2: The Big Oh Notation\"), mdx(\"p\", null, \"The formal definitions associated with the Big Oh notation are as follows:\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"text\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"className\": \"language-text\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-text\"\n  }, \"f(n) = O(g(n)) means c*g(n) is an upper bound on f(n). Thus there exists some\\nconstant c such that f (n) is always \\u2264 c*g(n), for large enough n (i.e.  ,n \\u2265 n0\\nfor some constant n0). \"))), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"text\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"className\": \"language-text\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-text\"\n  }, \"f(n) = \\u03A9(g(n)) means c*g(n) is a lower bound on f(n). Thus there exists some\\nconstant c such that f(n) is always \\u2265 c*g(n), for all n \\u2265 n0. \"))), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"text\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"className\": \"language-text\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-text\"\n  }, \"f(n) = \\u0398(g(n)) means c1*g(n) is an upper bound on f(n) and c2*g(n) is a lower\\nbound on f(n), for all n \\u2265 n0\\\\. Thus there exist constants c1 and c2 such that f\\n(n) \\u2264 c1*g(n) and f (n) \\u2265 c2*g(n). This means that g(n) provides a nice, tight\\nbound on f(n).\"))), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"/knowledge/fc43c8ef981088e111f09a8df84ce578/big-o.png\",\n    \"alt\": \"big-o\"\n  })), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"/knowledge/15b35b8395b97bf176c67081e8f888a7/omega.png\",\n    \"alt\": \"big-omega\"\n  })), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"/knowledge/f7b58efc11c413e158e9c91598a5df80/theta.png\",\n    \"alt\": \"big-theta\"\n  })));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"","private":false},"outboundReferences":[],"inboundReferences":[{"contextLine":"- [[22-the-big-oh-notation]]","referrer":{"parent":{"id":"2e021746-1df2-566c-9cce-c2130c882639","fields":{"slug":"/computer-science/books/the-algorithm-design-manual/the-algorithm-design-manual","title":"The Algorithm Design Manual"}}}}]},"fields":{"slug":"/computer-science/books/the-algorithm-design-manual/22-the-big-oh-notation","title":"2.2: The Big Oh Notation"}}},"pageContext":{"id":"1fb99e24-b458-5937-aa20-80f3646dbec3","refWordMdxSlugDict":{}}},"staticQueryHashes":["2221750479","2380733210","2768355698","63159454","847517413"]}