{"componentChunkName":"component---node-modules-gatsby-theme-kb-src-templates-topic-js","path":"/computer-science/books/the-algorithm-design-manual/21-the-ram-model-of-computation","result":{"data":{"file":{"childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"2.1: The RAM Model of Computation\"), mdx(\"p\", null, \"To understand the notions of the best, worst, and average-case complexity, think\\nabout running an algorithm over all possible instances of data that can be fed\\nto it.\"), mdx(\"p\", null, \"For the problem of sorting, the set of possible input instances consists of all\\npossible arrangements of n keys, over all possible values of n. We can represent\\neach input instance as a point on a graph where the x-axis represents the size\\nof the input problem (for sorting, the number of items to sort), and the y-axis\\ndenotes the number of steps taken by the algorithm in this instance. These\\npoints naturally align themselves into columns, because only integers represent\\npossible input size (e.g., it makes no sense to sort 10.57 items).\"), mdx(\"p\", null, \"We can define three interesting functions over the plot of these points:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The worst-case complexity of the algorithm is the function defined by the\\nmaximum number of steps taken in any instance of size n. This represents the\\ncurve passing through the highest point in each column.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The best-case complexity of the algorithm is the function defined by the minimum\\nnumber of steps taken in any instance of size n. This represents the curve\\npassing through the lowest point of each column.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The average-case complexity of the algorithm, which is the function defined by\\nthe average number of steps over all instances of size n.\")), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"/knowledge/cc9cbf65aa70f301d5a8cf9abdfb8db1/complexities.png\",\n    \"alt\": \"complexities\"\n  })));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"","private":false},"outboundReferences":[],"inboundReferences":[{"contextLine":"- [[21-the-ram-model-of-computation]]","referrer":{"parent":{"id":"2e021746-1df2-566c-9cce-c2130c882639","fields":{"slug":"/computer-science/books/the-algorithm-design-manual/the-algorithm-design-manual","title":"The Algorithm Design Manual"}}}}]},"fields":{"slug":"/computer-science/books/the-algorithm-design-manual/21-the-ram-model-of-computation","title":"2.1: The RAM Model of Computation"}}},"pageContext":{"id":"235e0b2f-722b-57ce-97f5-08b13bafbecf","refWordMdxSlugDict":{}}},"staticQueryHashes":["2221750479","2380733210","2768355698","63159454","847517413"]}