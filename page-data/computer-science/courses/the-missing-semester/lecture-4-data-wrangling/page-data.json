{"componentChunkName":"component---node-modules-gatsby-theme-kb-src-templates-topic-js","path":"/computer-science/courses/the-missing-semester/lecture-4-data-wrangling","result":{"data":{"file":{"childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Lecture 3: Data Wrangling\"), mdx(\"h2\", null, \"Resources\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.youtube.com/watch?v=sz_dsktIjt4\"\n  }, \"Lecture\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://en.wikipedia.org/wiki/Sed\"\n  }, \"sed\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://missing.csail.mit.edu/2020/data-wrangling/\"\n  }, \"Lecture page\"))), mdx(\"h2\", null, \"Commands\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"sed\"), \" stands for \\\"stream editor\\\".\"), mdx(\"p\", null, \"sed is a pretty old tool, so if we want to use newer regex syntax, pass in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"-E\"), \"\\nflag to sed.\"), mdx(\"p\", null, \"!!! note\\nregular expressions match in a greedy way by default\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"echo 'test string test123' | sed 's/.*test//'\"), \"\\nwill return '123'\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"sort\"), \" sorts lines.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"uniq -c\"), \" removes duplicates, and prints counts of items\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"paste -sd+\"), \" joins lines with delimiter \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"+\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"awk\"), \" is great to wrangle columnar data\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"","private":false},"outboundReferences":[],"inboundReferences":[{"contextLine":"- [[lecture-4-data-wrangling]]","referrer":{"parent":{"id":"a71db35a-94a3-5ac8-b91d-1b7403de2bc7","fields":{"slug":"/computer-science/courses/the-missing-semester/the-missing-semester","title":"The Missing Semester"}}}}]},"fields":{"slug":"/computer-science/courses/the-missing-semester/lecture-4-data-wrangling","title":"Lecture 3: Data Wrangling"}}},"pageContext":{"id":"4612d3ea-c93d-52ca-83de-a356a62b7808","refWordMdxSlugDict":{}}},"staticQueryHashes":["2221750479","2380733210","2768355698","63159454","847517413"]}