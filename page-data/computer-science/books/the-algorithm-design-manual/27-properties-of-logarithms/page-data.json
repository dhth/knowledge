{"componentChunkName":"component---node-modules-gatsby-theme-kb-src-templates-topic-js","path":"/computer-science/books/the-algorithm-design-manual/27-properties-of-logarithms","result":{"data":{"file":{"childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"2.7: Properties of Logarithms\"), mdx(\"p\", null, \"Two implications of these properties of logarithms are important to appreciate\\nfrom an algorithmic perspective:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"The base of the logarithm has no real impact on the growth rate - Compare the\\nfollowing three values: log2(1,000,000) = 19.9316, log3(1,000,000) = 12.5754,\\nand log100 (1, 000, 000) = 3. A big change in the base of the logarithm produces\\nlittle difference in the value of the log. Changing the base of the log from a\\nto c involves dividing by logc a. This conversion factor is lost to the Big Oh\\nnotation whenever a and c are constants. Thus we are usually justified in\\nignoring the base of the logarithm when analyzing algorithms.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Logarithms cut any function down to size - The growth rate of the logarithm of\\nany polynomial function is O(lg n). This follows because loga nb = b\\xB7loga n The\\npower of binary search on a wide range of problems is a consequence of this\\nobservation. Note that doing a binary search on a sorted array of n2 things\\nrequires only twice as many comparisons as a binary search on n things.\\nLogarithms efficiently cut any function down to size.\"))));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"","private":false},"outboundReferences":[],"inboundReferences":[{"contextLine":"- [[27-properties-of-logarithms]]","referrer":{"parent":{"id":"2e021746-1df2-566c-9cce-c2130c882639","fields":{"slug":"/computer-science/books/the-algorithm-design-manual/the-algorithm-design-manual","title":"The Algorithm Design Manual"}}}}]},"fields":{"slug":"/computer-science/books/the-algorithm-design-manual/27-properties-of-logarithms","title":"2.7: Properties of Logarithms"}}},"pageContext":{"id":"d3f0d413-1a4e-5f39-a3d4-ac6f13fb2e2d","refWordMdxSlugDict":{}}},"staticQueryHashes":["2221750479","2380733210","2768355698","63159454","847517413"]}