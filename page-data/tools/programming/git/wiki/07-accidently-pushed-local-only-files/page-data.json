{"componentChunkName":"component---node-modules-gatsby-theme-kb-src-templates-topic-js","path":"/tools/programming/git/wiki/07-accidently-pushed-local-only-files","result":{"data":{"file":{"childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Accidently pushed local only files\"), mdx(\"p\", null, \"Let's say you have some local files that in a repo that are not meant to be\\npushed to a remote, but, accidently, have been.\"), mdx(\"p\", null, \"Let's say the sha of the commit is \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ACCIDENTAL_COMMIT_SHA\"), \", and the\\nbranch of this commit is \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"FEATURE_BRANCH\"), \".\"), mdx(\"p\", null, \"To retrieve the local only files, and keep them in an untracked status:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Revert the commit, or bring the remote to the intended state via any method\\n(ie, the only difference between the branch and the faulty commit is the\\nlocal only files)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Check out to another branch locally\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Run git diff to see the files that that are different in the branch and the\\naccidental commit\", mdx(\"div\", {\n    parentName: \"li\",\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"text\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"className\": \"language-text\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-text\"\n  }, \"git diff --name-only ACCIDENTAL_COMMIT_SHA origin/FEATURE_BRANCH\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Checkout those files into the current branch.\", mdx(\"div\", {\n    parentName: \"li\",\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"bash\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"className\": \"language-bash\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"git\"), \" checkout ACCIDENTAL_COMMIT_SHA \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"\\\\\"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token variable\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token variable\"\n  }, \"$(\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token function\"\n  }, \"git\"), \" \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token function\"\n  }, \"diff\"), \" --name-only ACCIDENTAL_COMMIT_SHA origin/FEATURE_BRANCH \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token operator\"\n  }, \"|\"), \" \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token function\"\n  }, \"xargs\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token variable\"\n  }, \")\")))))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Finally, remove these files from the staging area.\")), mdx(\"p\", null, \"Breathe a sigh of relief!\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"","private":false},"outboundReferences":[],"inboundReferences":[{"contextLine":"- [[07-accidently-pushed-local-only-files]]","referrer":{"parent":{"id":"c9c99e4b-3a82-562a-8cfa-2a57ef8a846a","fields":{"slug":"/tools/programming/git/wiki/git-wiki","title":"Git Wiki"}}}}]},"fields":{"slug":"/tools/programming/git/wiki/07-accidently-pushed-local-only-files","title":"Accidently pushed local only files"}}},"pageContext":{"id":"5737ec2f-ba3c-57fe-81ee-304f0fc6e44c","refWordMdxSlugDict":{}}},"staticQueryHashes":["2221750479","2380733210","2768355698","63159454","847517413"]}