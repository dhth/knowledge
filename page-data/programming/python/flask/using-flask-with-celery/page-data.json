{"componentChunkName":"component---node-modules-gatsby-theme-kb-src-templates-topic-js","path":"/programming/python/flask/using-flask-with-celery","result":{"data":{"file":{"childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Using flask with celery\"), mdx(\"h2\", null, \"Using \", mdx(\"inlineCode\", {\n    parentName: \"h2\"\n  }, \"url_for\"), \" within celery\"), mdx(\"p\", null, \"Celery can be configured to use flask app's application_context.\"), mdx(\"p\", null, \"More \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://flask.palletsprojects.com/en/1.1.x/patterns/celery/\"\n  }, \"here\"), \".\"), mdx(\"p\", null, \"However, since \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"url_for\"), \" typically needs a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"request_context\"), \" (which is always\\navailable in functions that define flask routes), it is not able to build a url\\nwithout it.\"), mdx(\"p\", null, \"Flask lets us generate urls in the absence of a request if a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"SERVER_NAME\"), \"\\nis configured for the app.\"), mdx(\"p\", null, \"The default url scheme for generating urls in the absence of a request context\\nis \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"http\"), \". This can be set to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"https\"), \" either on a case by case basis by passing\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"_scheme='https'\"), \" to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"url_for\"), \", or by setting the config variable\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"PREFERRED_URL_SCHEME\"), \" to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"https\"), \". More\\n\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://flask.palletsprojects.com/en/1.1.x/config/\"\n  }, \"here\"), \".\"), mdx(\"p\", null, \"More on the application context \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://flask-doc.readthedocs.io/en/latest/appcontext.html#app-context\"\n  }, \"here\"), \".\"), mdx(\"p\", null, \"More on the request context \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://flask-doc.readthedocs.io/en/latest/reqcontext.html\"\n  }, \"here\"), \".\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"","private":false},"outboundReferences":[],"inboundReferences":[{"contextLine":"- [[using-flask-with-celery]]","referrer":{"parent":{"id":"05271b77-406b-5ade-9cab-28acd2a288d7","fields":{"slug":"/programming/python/flask/flask","title":"Flask"}}}}]},"fields":{"slug":"/programming/python/flask/using-flask-with-celery","title":"Using flask with celery"}}},"pageContext":{"id":"4f5f5351-0c96-505d-a295-69923960c905","refWordMdxSlugDict":{}}},"staticQueryHashes":["2221750479","2380733210","2768355698","63159454","847517413"]}