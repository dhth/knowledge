{"componentChunkName":"component---node-modules-gatsby-theme-kb-src-templates-topic-js","path":"/computer-science/computer-networking/courses/the-bits-and-bytes-of-computer-networking/week-1/bits-and-bytes-week-1","result":{"data":{"file":{"childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Bits and Bytes Week 1\"), mdx(\"h2\", null, \"Modules\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"01-the-tcp-ip-five-layer-network-model\",\n    \"title\": \"01-the-tcp-ip-five-layer-network-model\"\n  }, \"[[01-the-tcp-ip-five-layer-network-model]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"02-the-basics-of-networking-devices\",\n    \"title\": \"02-the-basics-of-networking-devices\"\n  }, \"[[02-the-basics-of-networking-devices]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"03-the-data-link-layer\",\n    \"title\": \"03-the-data-link-layer\"\n  }, \"[[03-the-data-link-layer]]\"), \"\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"","private":false},"outboundReferences":[{"contextLine":"- [[01-the-tcp-ip-five-layer-network-model]]","targetAnchor":null,"refWord":"01-the-tcp-ip-five-layer-network-model","target":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"The TCP IP Five Layer Network Model\"), mdx(\"h2\", null, \"The Five Layers\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"/knowledge/453d93ee39101c0bb30b684009f4416a/five-layers.png\",\n    \"alt\": \"five-layers\"\n  })), mdx(\"p\", null, \"Starting from bottom:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Physical\"), \": represents the physical devices that interconnect computers\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Data Link\"), \": responsible for defining a common way of interpreting signals\\nso network devices can communicate (eg. ethernet, wireless)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Network\"), \": allows different networks to communicate with each other (through\\nrouters)\")), mdx(\"p\", null, \"!!! note \\\"Internetwork\\\"\\nA collection of networks connected together through routers, most famous of\\nthese being the Internet. \"), mdx(\"p\", null, \"!!! note \\\"Data Link vs Network\\\"\\nData Link is responsible for getting data across a single link; network\\nlayer is responsible for getting data across a collection of networks.\"), mdx(\"p\", null, \"!!! note \\\"IP\\\"\\nMost common protocol at the network layer is the Internet Protocol.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Transport\"), \": sorts out which client and server programs are supposed to get\\nthe data being sent (a node can run multiple clients -- like chrome, email)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Application\"), \": http, smtp etc.\")), mdx(\"p\", null, \"Analogy with package delivery:\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"/knowledge/b655234ef51f5b9fe6f6c52b1c72f401/five-layer-analogue.png\",\n    \"alt\": \"five-layer-analogue\"\n  })), mdx(\"p\", null, \"Networking devices, and the layers they operate at:\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"/knowledge/ed9f9e8bc0444c7fdba1f6ae3555df82/layers-and-devices.png\",\n    \"alt\": \"layers-and-devices\"\n  })));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"id":"4936bfff-1f60-57ff-b7ee-e997f981f36e","fields":{"slug":"/computer-science/computer-networking/courses/the-bits-and-bytes-of-computer-networking/week-1/01-the-tcp-ip-five-layer-network-model","title":"The TCP IP Five Layer Network Model"}}}},{"contextLine":"- [[02-the-basics-of-networking-devices]]","targetAnchor":null,"refWord":"02-the-basics-of-networking-devices","target":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"The Basics of Networking Devices\"), mdx(\"h2\", null, \"Hubs and Switches\"), mdx(\"p\", null, \"Hubs allow for connections to many computers at once, but result in collisions.\\nAs a result, devices need to wait, slowing down communications. Less used today.\"), mdx(\"p\", null, \"A switch solves this problem. Hubs operate on layer 1, whereas switches operate\\non layer 2. This means a switch can inspect the contents of the data being sent.\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"/knowledge/a58407b9afe623db3e416d37d18df0fa/hub-vs-switch.png\",\n    \"alt\": \"hub-vs-switch\"\n  })), mdx(\"h2\", null, \"Router\"), mdx(\"p\", null, \"A router is a device that knows how to forward data between independent\\nnetworks. It operates on layer 3.\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"/knowledge/bd6bc3d0ce1d3f7acd70c3b58cec7b30/router.png\",\n    \"alt\": \"router\"\n  })));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"id":"5e8f141c-9516-53d6-a159-54a6077fe933","fields":{"slug":"/computer-science/computer-networking/courses/the-bits-and-bytes-of-computer-networking/week-1/02-the-basics-of-networking-devices","title":"The Basics of Networking Devices"}}}},{"contextLine":"- [[03-the-data-link-layer]]","targetAnchor":null,"refWord":"03-the-data-link-layer","target":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"The Data Link Layer\"), mdx(\"h2\", null, \"The Ethernet Frame\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"/knowledge/b93b187c7636994f23a90349999034d2/ethernet-frame.png\",\n    \"alt\": \"ethernet-frame\"\n  })));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"id":"8361ecb5-90d0-5146-abfc-a8014549c0f1","fields":{"slug":"/computer-science/computer-networking/courses/the-bits-and-bytes-of-computer-networking/week-1/03-the-data-link-layer","title":"The Data Link Layer"}}}}],"inboundReferences":[{"contextLine":"- [[bits-and-bytes-week-1]]","referrer":{"parent":{"id":"2f9046c2-3b3f-5b88-ba35-0e624a6d1320","fields":{"slug":"/computer-science/computer-networking/courses/the-bits-and-bytes-of-computer-networking/the-bits-and-bytes-of-computer-networking","title":"The Bits and Bytes of Computer Networking"}}}}]},"fields":{"slug":"/computer-science/computer-networking/courses/the-bits-and-bytes-of-computer-networking/week-1/bits-and-bytes-week-1","title":"Bits and Bytes Week 1"}}},"pageContext":{"id":"8cafad7e-82be-5cdb-8e6a-fc2d3178033b","refWordMdxSlugDict":{"01-the-tcp-ip-five-layer-network-model":"computer-science/computer-networking/courses/the-bits-and-bytes-of-computer-networking/week-1/01-the-tcp-ip-five-layer-network-model","02-the-basics-of-networking-devices":"computer-science/computer-networking/courses/the-bits-and-bytes-of-computer-networking/week-1/02-the-basics-of-networking-devices","03-the-data-link-layer":"computer-science/computer-networking/courses/the-bits-and-bytes-of-computer-networking/week-1/03-the-data-link-layer"}}},"staticQueryHashes":["2221750479","2380733210","2768355698","63159454","847517413"]}