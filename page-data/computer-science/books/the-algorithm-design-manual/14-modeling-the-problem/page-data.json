{"componentChunkName":"component---node-modules-gatsby-theme-kb-src-templates-topic-js","path":"/computer-science/books/the-algorithm-design-manual/14-modeling-the-problem","result":{"data":{"file":{"childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"1.4: Modeling the Problem\"), mdx(\"h2\", null, \"Combinatorial Objects\"), mdx(\"p\", null, \"Odds are very good that others have stumbled upon your algorithmic problem\\nbefore you, perhaps in substantially different contexts. But to find out what is\\nknown about your particular \\\"widget optimization problem,\\\" you can't hope to\\nlook in a book under widget. You must formulate widget optimization in terms of\\ncomputing properties of common structures such as: \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Permutations\"), \" -- which are arrangements, or orderings, of items. For\\nexample, {1, 4, 3, 2} and {4, 3, 2, 1} are two distinct permutations of the same\\nset of four integers. We have already seen permutations in the robot\\noptimization prob- lem, and in sorting. Permutations are likely the object in\\nquestion whenever your problem seeks an \\\"arrangement,\\\" \\\"tour,\\\" \\\"ordering,\\\" or\\n\\\"sequence.\\\" \")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Subsets\"), \" -- which represent selections from a set of items. For example,\\n{1, 3, 4} and {2} are two distinct subsets of the first four integers. Order\\ndoes not matter in subsets the way it does with permutations, so the subsets {1,\\n3, 4} and {4, 3, 1} would be considered identical. We saw subsets arise in the\\nmovie scheduling problem. Subsets are likely the object in question whenever\\nyour problem seeks a \\\"cluster,\\\" \\\"collection,\\\" \\\"committee,\\\" \\\"group,\\\" \\\"packaging,\\\"\\nor \\\"selection.\\\" \")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Trees\"), \" -- which represent hierarchical relationships between items. Trees\\nare likely the object in question whenever your problem seeks a \\\"hierarchy,\\\"\\n\\\"dominance relationship,\\\" \\\"ancestor/descendant relationship,\\\" or \\\"taxonomy.\\\" \")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Graphs\"), \" -- which represent relationships between arbitrary pairs of\\nobjects. Graphs are likely the object in question whenever you seek a \\\"network,\\\"\\n\\\"circuit,\\\" \\\"web,\\\" or \\\"relationship.\\\" \")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Points\"), \" -- which represent locations in some geometric space. For example,\\nthe locations of McDonald's restaurants can be described by points on a\\nmap/plane.  Points are likely the object in question whenever your problems work\\non \\\"sites,\\\" \\\"positions,\\\" \\\"data records,\\\" or \\\"locations.\\\" \")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Polygons\"), \" -- which represent regions in some geometric spaces. For example,\\nthe borders of a country can be described by a polygon on a map/plane. Polygons\\nand polyhedra are likely the object in question whenever you are working on\\n\\\"shapes,\\\" \\\"regions,\\\" \\\"configurations,\\\" or \\\"boundaries.\\\" \")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Strings\"), \" -- which represent sequences of characters or patterns. For\\nexample, the names of students in a class can be represented by strings. Strings\\nare likely the object in question whenever you are dealing with \\\"text,\\\" \\\"charac-\\nters,\\\" \\\"patterns,\\\" or \\\"labels.\\\"\"))));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"","private":false},"outboundReferences":[],"inboundReferences":[{"contextLine":"- [[14-modeling-the-problem]]","referrer":{"parent":{"id":"2e021746-1df2-566c-9cce-c2130c882639","fields":{"slug":"/computer-science/books/the-algorithm-design-manual/the-algorithm-design-manual","title":"The Algorithm Design Manual"}}}}]},"fields":{"slug":"/computer-science/books/the-algorithm-design-manual/14-modeling-the-problem","title":"1.4: Modeling the Problem"}}},"pageContext":{"id":"ec75e4c2-c108-5bbb-9abb-23f7101fcfe5","refWordMdxSlugDict":{}}},"staticQueryHashes":["2221750479","2380733210","2768355698","63159454","847517413"]}