{"componentChunkName":"component---node-modules-gatsby-theme-kb-src-templates-topic-js","path":"/tools/programming/vim/vim-wiki/01-norm","result":{"data":{"file":{"childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Norm\"), mdx(\"h2\", null, \"Resources\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.youtube.com/watch?v=hraHAZ1-RaM\"\n  }, \"A Vid in which Vim Saves Me Hours & Hundreds of Clicks\"))), mdx(\"h2\", null, \"Use norm with visual mode\"), mdx(\"p\", null, \"Let's say I want to prepend the text \\\"prepend\\\" and append the text \\\"append\\\" to a\\nbunch of lines.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Highlight lines\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \":'<,'>norm! 0iprepend<C-v><Esc>Aappend\"), \" (Literally type \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"<C-v>\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Esc\"), \",\\nwhich will be entered as \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"^\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"[\"), \" respectively in the command line)\")), mdx(\"p\", null, \"More \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.reddit.com/r/vim/comments/4ofv82/the_normal_command_is_really_cool/\"\n  }, \"here\"), \".\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"","private":false},"outboundReferences":[],"inboundReferences":[{"contextLine":"- [[01-norm]]","referrer":{"parent":{"id":"f5e27205-7532-57d0-bed1-c91588d1b1fd","fields":{"slug":"/tools/programming/vim/vim-wiki/vim-wiki","title":"Vim Wiki"}}}}]},"fields":{"slug":"/tools/programming/vim/vim-wiki/01-norm","title":"Norm"}}},"pageContext":{"id":"d6f62b47-23dd-59c5-be55-dd472800a6c2","refWordMdxSlugDict":{}}},"staticQueryHashes":["2221750479","2380733210","2768355698","63159454","847517413"]}