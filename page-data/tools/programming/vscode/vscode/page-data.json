{"componentChunkName":"component---node-modules-gatsby-theme-kb-src-templates-topic-js","path":"/tools/programming/vscode/vscode","result":{"data":{"file":{"childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"VSCode\"), mdx(\"h2\", null, \"Modules\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"vscode-vim/vscode-vim\",\n    \"title\": \"vscode-vim\"\n  }, \"[[vscode-vim]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"vscode-paste-image\",\n    \"title\": \"vscode-paste-image\"\n  }, \"[[vscode-paste-image]]\"), \"\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"","private":false},"outboundReferences":[{"contextLine":"- [[vscode-vim]]","targetAnchor":null,"refWord":"vscode-vim","target":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"VSCode Vim\"), mdx(\"h2\", null, \"Resources\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/VSCodeVim/Vim\"\n  }, \"VSCodeVim/Vim\"))), mdx(\"h2\", null, \"Modules\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"vscode-vim-shortcuts\",\n    \"title\": \"vscode-vim-shortcuts\"\n  }, \"[[vscode-vim-shortcuts]]\"), \"\")));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"id":"644d84e2-2316-5580-a70a-2140377a44bb","fields":{"slug":"/tools/programming/vscode/vscode-vim/vscode-vim","title":"VSCode Vim"}}}},{"contextLine":"- [[vscode-paste-image]]","targetAnchor":null,"refWord":"vscode-paste-image","target":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"VSCode Paste Image\"), mdx(\"h2\", null, \"Resources\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://marketplace.visualstudio.com/items?itemName=mushan.vscode-paste-image\"\n  }, \"Extension Page\"))), mdx(\"p\", null, \"Trying to make it behave as similar as \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/ferrine/md-img-paste.vim\"\n  }, \"md-img-paste\"), \".\"), mdx(\"h2\", null, \"Settings\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"settings.json\"), \":\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"text\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"className\": \"language-text\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-text\"\n  }, \"{\\n    \\\"before\\\": [\\\"<leader>\\\", \\\"p\\\"],\\n    \\\"commands\\\": [\\n        \\\"extension.pasteImage\\\"\\n    ]\\n},\\n\\\"pasteImage.filePathConfirmInputBoxMode\\\": \\\"onlyName\\\",\\n\\\"pasteImage.path\\\": \\\"${currentFileDir}/assets\\\",\\n\\\"pasteImage.showFilePathConfirmInputBox\\\": true,\\n\\\"pasteImage.namePrefix\\\": \\\"${currentFileNameWithoutExt}-\\\",\"))));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"id":"22123066-a13c-5d10-9cf7-0a204571efcd","fields":{"slug":"/tools/programming/vscode/vscode-paste-image","title":"VSCode Paste Image"}}}}],"inboundReferences":[{"contextLine":"- [[vscode]]","referrer":{"parent":{"id":"44454ee0-89ec-53dd-8dc1-53e130c4a0cd","fields":{"slug":"/tools/programming/programming-tools","title":"Programming Tools"}}}}]},"fields":{"slug":"/tools/programming/vscode/vscode","title":"VSCode"}}},"pageContext":{"id":"b47c62d3-dce8-518e-a870-46f68eb65d8f","refWordMdxSlugDict":{"vscode-vim":"tools/programming/vscode/vscode-vim/vscode-vim","vscode-vim-shortcuts":"tools/programming/vscode/vscode-vim/vscode-vim-shortcuts","vim":"tools/programming/vim/vim","vim-wiki":"tools/programming/vim/vim-wiki/vim-wiki","vim-wiki-old":"tools/programming/vim/vim-wiki/vim-wiki-old","01-norm":"tools/programming/vim/vim-wiki/01-norm","02-global":"tools/programming/vim/vim-wiki/02-global","03-substitute":"tools/programming/vim/vim-wiki/03-substitute","04-buffers":"tools/programming/vim/vim-wiki/04-buffers","05-tabs":"tools/programming/vim/vim-wiki/05-tabs","06-autocommands":"tools/programming/vim/vim-wiki/06-autocommands","07-splits":"tools/programming/vim/vim-wiki/07-splits","09-files":"tools/programming/vim/vim-wiki/09-files","10-quickfix":"tools/programming/vim/vim-wiki/10-quickfix","11-search":"tools/programming/vim/vim-wiki/11-search","12-miscellaneous":"tools/programming/vim/vim-wiki/12-miscellaneous","13-command-line":"tools/programming/vim/vim-wiki/13-command-line","14-performance":"tools/programming/vim/vim-wiki/14-performance","15-external-commands":"tools/programming/vim/vim-wiki/15-external-commands","16-folds":"tools/programming/vim/vim-wiki/16-folds","plugins":"tools/programming/vim/plugins/plugins","vim-fzf":"tools/programming/vim/plugins/vim-fzf","fzf":"tools/programming/unix/utilities/fzf","ftplugin":"tools/programming/vim/plugins/ftplugin","fugitive":"tools/programming/vim/plugins/fugitive","coc":"tools/programming/vim/plugins/coc/coc","language-servers":"tools/programming/vim/plugins/coc/language-servers/language-servers","01-yaml":"tools/programming/vim/plugins/coc/language-servers/01-yaml","02-python":"tools/programming/vim/plugins/coc/language-servers/02-python","01-pyright":"programming/python/setup/01-pyright","01-cocsearch":"tools/programming/vim/plugins/coc/01-cocsearch","02-toggle-suggestions-or-sources":"tools/programming/vim/plugins/coc/02-toggle-suggestions-or-sources","replace-with-register":"tools/programming/vim/plugins/replace-with-register","05-vim-test":"tools/programming/vim/plugins/05-vim-test","themes":"tools/programming/vim/themes/themes","gruvbox":"tools/programming/vim/themes/gruvbox","vimscript":"tools/programming/vim/vimscript/vimscript","basic-vimscript":"tools/programming/vim/vimscript/basic-vimscript","operator-pending-mappings":"tools/programming/vim/vimscript/operator-pending-mappings","functions":"tools/programming/vim/vimscript/functions","strings":"tools/programming/vim/vimscript/strings","execute":"tools/programming/vim/vimscript/execute","vim-resources":"tools/programming/vim/resources/vim-resources","vimcasts-by-drew-neil":"tools/programming/vim/resources/vimcasts-by-drew-neil","screencasts-by-greg-hurrell":"tools/programming/vim/resources/screencasts-by-greg-hurrell","practical-vim":"tools/programming/vim/resources/practical-vim","awesome-vim":"tools/programming/vim/awesome-vim","neovim":"tools/programming/vim/neovim/neovim","plugin-development":"tools/programming/vim/neovim/plugin-development/plugin-development","01-native-lsp":"tools/programming/vim/neovim/01-native-lsp","vscode-paste-image":"tools/programming/vscode/vscode-paste-image"}}},"staticQueryHashes":["2221750479","2380733210","2768355698","63159454","847517413"]}